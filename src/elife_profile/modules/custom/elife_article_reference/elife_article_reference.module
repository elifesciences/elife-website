<?php
/**
 * @file
 * Code for the eLife: Article Reference feature.
 */

use Drupal\elife_article\ElifeArticleVersion;

include_once 'elife_article_reference.features.inc';

/**
 * Implements hook_ctools_plugin_directory().
 */
function elife_article_reference_ctools_plugin_directory($owner, $plugin_type) {
  return 'plugins/' . $plugin_type;
}

/**
 * Implements hook_node_view_alter().
 */
function elife_article_reference_node_view_alter(&$build) {
  // We don't want to see elife_article_reference anywhere, so replace it with the
  // first elife_article_ver.
  if ('elife_article_reference' === $build['#bundle']) {
    $article = ElifeArticleVersion::getArticle($build['#node']->field_elife_a_article_id[LANGUAGE_NONE][0]['value']);
    if ($article && !empty($article->field_elife_a_versions)) {
      $article_version = node_load($article->field_elife_a_versions[LANGUAGE_NONE][0]['target_id']);
      if ($article_version) {
        $build = node_view($article_version, $build['#view_mode'], $build['#language']);
      }
    }
  }
}

/**
 * Implements hook_form_FORM_ID_alter() for node_form().
 */
function elife_article_reference_form_node_form_alter(&$form, &$form_state, $form_id) {
  if ('elife_article_reference' !== $form['#bundle']) {
    return;
  }

  $form['field_elife_title']['#access'] = FALSE;

  // Title might not be required.
  $form['field_elife_a_title'][LANGUAGE_NONE][0]['#required'] = FALSE;

  if (isset($form['#node']->field_elife_a_article_id)) {
    // If the article exists, then disable the title and article ID fields.
    $form['field_elife_a_title'][LANGUAGE_NONE][0]['#attributes']['disabled'] = TRUE;
    $form['field_elife_a_article_id'][LANGUAGE_NONE][0]['value']['#attributes']['disabled'] = TRUE;
    $form['field_elife_a_article_id'][LANGUAGE_NONE][0]['value']['#required'] = FALSE;
  }

  // Hide the publish field.
  $form['options']['status']['#access'] = FALSE;

  $form['#validate'][] = 'elife_article_reference_form_validate';
}

/**
 * Form validation handler for node_form() and elife_article_reference entities.
 */
function elife_article_reference_form_validate($form, &$form_state) {
  if (empty($form_state['values']['field_elife_a_title'][LANGUAGE_NONE][0]['value']) && !empty($form_state['values']['field_elife_a_article_id'][LANGUAGE_NONE][0]['value'])) {
    $article = ElifeArticleVersion::getArticle($form_state['values']['field_elife_a_article_id'][LANGUAGE_NONE][0]['value']);
    if (!$article) {
      form_set_error('field_elife_a_title', t('A title is required if the article is not yet known by the site.'));
    }
  }
}

/**
 * Implements hook_node_presave().
 */
function elife_article_reference_node_presave($node) {
  /* @var EntityDrupalWrapper $node */
  $node = entity_metadata_wrapper('node', $node);

  if ('elife_article' === $node->getBundle()) {
    $article_id = $node->field_elife_a_article_id->value();

    $article_reference = elife_article_reference_for_article_id($node->raw());

    if (!$article_reference->is_new) {
      /* @var EntityDrupalWrapper $article_reference */
      $article_reference = entity_metadata_wrapper('node', $article_reference);

      $article_reference->field_elife_a_article_id = $article_id;
      $article_reference->field_elife_a_title = $node->field_elife_title->value();
      $article_reference->status = $node->status->value();

      $article_reference->save();
    }
  }
}

/**
 * Implements hook_node_delete().
 */
function elife_article_reference_node_delete($node) {
  if ('elife_article' !== $node->type || empty($node->field_elife_a_article_id)) {
    return;
  }

  $article_reference = elife_article_reference_for_article_id($node);

  if (NODE_NOT_PUBLISHED != $article_reference->status) {
    $article_reference->status = NODE_NOT_PUBLISHED;
    node_save($article_reference);
  }
}

/**
 * Get article reference entity for an article.
 *
 * If one doesn't already exist, it's created (but not yet persisted).
 *
 * @param stdClass $article
 *   Article node.
 *
 * @return object
 *   Article reference entity.
 */
function elife_article_reference_for_article_id(stdClass $article) {
  $references = &drupal_static(__FUNCTION__, []);

  $article_id = $article->field_elife_a_article_id[LANGUAGE_NONE][0]['value'];

  if (!isset($references[$article_id])) {
    $query = new EntityFieldQuery();

    $query->entityCondition('entity_type', 'node')
      ->entityCondition('bundle', 'elife_article_reference')
      ->fieldCondition('field_elife_a_article_id', 'value', $article_id, '=')
      ->range(0, 1);

    $result = $query->execute();

    if (empty($result['node'])) {
      $reference = entity_create('node', [
        'type' => 'elife_article_reference',
        'uid' => $article->uid,
      ]);

      $reference->field_elife_a_article_id[LANGUAGE_NONE][0]['value'] = $article_id;
      $reference->field_elife_a_title = $article->field_elife_title;
      $reference->status = $article->status;

      node_save($reference);

      $references[$article_id] = $reference->nid;

      return $reference;
    }

    $references[$article_id] = key($result['node']);
  }

  return node_load($references[$article_id]);
}

function elife_article_reference_get_article_version($article_reference) {
  $article = ElifeArticleVersion::getArticle($article_reference->field_elife_a_article_id[LANGUAGE_NONE][0]['value']);
  if ($article && !empty($article->field_elife_a_versions)) {
    $article_version = node_load($article->field_elife_a_versions[LANGUAGE_NONE][0]['target_id']);
    if ($article_version) {
      return $article_version;
    }
  }

  return FALSE;
}

/**
 * Get the image style path for the article striking image.
 *
 * @param string $article_id
 *   Article Id.
 * @param string $image_style
 *   Image style preset
 * @param string $figure
 *   Preferred figure number
 *
 * @return string
 *   Image style path
 */
function elife_article_reference_striking_image_path($article_id, $image_style = 'elife_striking_image', $figure = NULL) {
  if ($image_style = image_style_load($image_style)) {
    $id_query = new EntityFieldQuery();
    $id_query->entityCondition('entity_type', 'node');
    $id_query->entityCondition('bundle', 'elife_article_reference');
    $id_query->fieldCondition('field_elife_a_article_id', 'value', $article_id, '=');
    $id_query->range(0, 1);
    $ids = $id_query->execute();
    if (!empty($ids['node'])) {
      $nids = array_keys($ids['node']);
      $article_reference = node_load($nids[0]);
      /* @var EntityDrupalWrapper $ewrapper */
      if ($ewrapper = entity_metadata_wrapper('node', $article_reference)) {
        if ($image_properties = $ewrapper->field_elife_aa_striking_image->value()) {
          $image_uri = $image_properties['uri'];
          $image_style_path = image_style_path($image_style['name'], $image_uri);
          $success = file_exists($image_style_path) || image_style_create_derivative($image_style, $image_uri, $image_style_path);
          if ($success) {
            return $image_style_path;
          }
        }
        if (empty($figure) && $striking_figure = $ewrapper->field_elife_aa_striking_figure->value()) {
          $figure = $striking_figure;
        }
      }
    }
    $article_id = _elife_article_process_article_id($article_id);
    if (empty($figure)) {
      $figure = '1';
    }
    // @todo - elife - nlisgo - this will need to be refactored once we know
    // where article assets will be hosted.
    if (is_numeric($figure)) {
      $figure = 'f' . str_pad($figure, 3, "0", STR_PAD_LEFT);
    }
    $url = sprintf('http://cdn.elifesciences.org/elife-articles/%s/jpg/elife%s%s.jpg', $article_id, $article_id, $figure);
    if ($image_uri = imagecache_external_generate_path($url)) {
      $image_style_path = image_style_path($image_style['name'], $image_uri);
      $success = file_exists($image_style_path) || image_style_create_derivative($image_style, $image_uri, $image_style_path);
      if ($success) {
        return $image_style_path;
      }
    }
  }
}
